name: Build and Push Frontend Docker Image

on:
  push:
    branches: [main]

env:
  DOCKER_IMAGE_NAME: huyenthai01/messaging-frontend
  TAG_NAME: latest

jobs:
  docker-image-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          IMAGE="${{ env.DOCKER_IMAGE_NAME }}:$SHORT_SHA"
          LATEST="${{ env.DOCKER_IMAGE_NAME }}:${{ env.TAG_NAME }}"
          docker build -t "$IMAGE" -t "$LATEST" ./messaging-app


      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          docker push "${{ env.DOCKER_IMAGE_NAME }}:$SHORT_SHA"
          docker push "${{ env.DOCKER_IMAGE_NAME }}:${{ env.TAG_NAME }}"
  
  e2e-tests:
      runs-on: ubuntu-latest

      env:
        Jwt__Key: ${{ secrets.E2E_JWT_KEY }}
        ConnectionStrings__AuthDb: ${{ secrets.E2E_AUTH_DB_CONNECTION }}
        ConnectionStrings__UserDb: ${{ secrets.E2E_USER_DB_CONNECTION }}
        AzureBlob__ConnectionString: ${{ secrets.E2E_AZURE_BLOB_CONNECTION }}
        RabbitMq__User: ${{ secrets.E2E_RABBITMQ_USER }}
        RabbitMq__Password: ${{ secrets.E2E_RABBITMQ_PASSWORD }}
        DB_PASSWORD: ${{ secrets.E2E_DB_PASSWORD }}

      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Start full application stack
          run: docker-compose -f docker-compose.e2e.yml up -d

        - name: Wait for frontend to be ready
          uses: jakejarvis/wait-action@v0.1.1
          with:
            url: http://localhost:8081
            timeout: 60

        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: 20

        - name: Install frontend dependencies
          run: |
            cd messaging-app
            npm ci

        - name: Run Cypress tests
          uses: cypress-io/github-action@v5
          with:
            working-directory: messaging-app
            config: baseUrl=http://localhost:8081
            wait-on: http://localhost:8081

        - name: Shut down all services
          if: always()
          run: docker-compose -f docker-compose.e2e.yml down

